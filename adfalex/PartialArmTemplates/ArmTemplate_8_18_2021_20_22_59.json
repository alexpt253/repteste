{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adfalex"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_alex12')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Stored procedure3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('var_random_num')),95)",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Stored procedure1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Set variable1",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Set variable2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[insert_random_number]",
										"storedProcedureParameters": {
											"datetime_insert": {
												"value": {
													"value": "@variables('var_datetime')",
													"type": "Expression"
												},
												"type": "String"
											},
											"random_number": {
												"value": {
													"value": "@int(variables('var_random_num'))",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "dbalex",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "var_random_num",
										"value": {
											"value": "@string(rand(0,100))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set variable2",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "var_datetime",
										"value": {
											"value": "@formatDateTime(utcnow(), 'yyyyMMdd-HHmmss')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Stored procedure2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('Stored procedure2').output,20)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Stored procedure5",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[insert_outcome_random_number]",
										"storedProcedureParameters": {
											"datetime_insert": {
												"value": "@formatDateTime(utcnow(), 'yyyyMMdd-HHmmss')",
												"type": "String"
											},
											"outcome": {
												"value": "Less than 20 loops",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "dbalex",
										"type": "LinkedServiceReference"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Stored procedure4",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[insert_outcome_random_number]",
										"storedProcedureParameters": {
											"datetime_insert": {
												"value": {
													"value": "@formatDateTime(utcnow(), 'yyyyMMdd-HHmmss')",
													"type": "Expression"
												},
												"type": "String"
											},
											"outcome": {
												"value": "More than 20 loops",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "dbalex",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Stored procedure2",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Until1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[num_records_random_number]",
							"storedProcedureParameters": {
								"cnt": {
									"value": "",
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "dbalex",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Stored procedure3",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[truncate_random_number]"
						},
						"linkedServiceName": {
							"referenceName": "dbalex",
							"type": "LinkedServiceReference"
						}
					}
				],
				"variables": {
					"var_random_num": {
						"type": "String"
					},
					"var_datetime": {
						"type": "String"
					},
					"count": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}
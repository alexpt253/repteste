{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "dfalexpt"
		},
		"blobstoragealex_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'blobstoragealex'"
		},
		"dbalex_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'dbalex'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_alex')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "cd_city",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "cd_city",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "no_city",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "no_city",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "cd_state",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "cd_state",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "pop",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "pop",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "cities",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dbalex_cities",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-12-13T09:33:28Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/cities')]",
				"[concat(variables('factoryId'), '/datasets/dbalex_cities')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_alex_2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow_alex1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"cities": {},
									"countries": {},
									"dbalexcities": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-12-13T09:09:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cities')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "blobstoragealex",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "cities.txt",
						"container": "containeralexp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "cd_city",
						"type": "String"
					},
					{
						"name": "no_city",
						"type": "String"
					},
					{
						"name": "cd_state",
						"type": "String"
					},
					{
						"name": "pop",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/blobstoragealex')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/countries')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "blobstoragealex",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "city_countries.txt",
						"container": "containeralexp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "no_city",
						"type": "String"
					},
					{
						"name": "no_pais",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/blobstoragealex')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dbalex_cities')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dbalex",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "nu_city",
						"type": "int",
						"precision": 10
					},
					{
						"name": "no_city",
						"type": "varchar"
					},
					{
						"name": "cd_state",
						"type": "char"
					},
					{
						"name": "no_pais",
						"type": "varchar"
					},
					{
						"name": "pop",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "cities"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dbalex')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/topcities')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dbalex",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "cd_city",
						"type": "int",
						"precision": 10
					},
					{
						"name": "no_city",
						"type": "varchar"
					},
					{
						"name": "cd_state",
						"type": "char"
					},
					{
						"name": "pop",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "cities"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dbalex')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/blobstoragealex')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('blobstoragealex_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dbalex')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('dbalex_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "cities",
								"type": "DatasetReference"
							},
							"name": "cities"
						},
						{
							"dataset": {
								"referenceName": "countries",
								"type": "DatasetReference"
							},
							"name": "countries"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dbalex_cities",
								"type": "DatasetReference"
							},
							"name": "dbalexcities"
						}
					],
					"transformations": [
						{
							"name": "Filter1"
						},
						{
							"name": "Join1"
						}
					],
					"script": "source(output(\n\t\tcd_city as string,\n\t\tno_city as string,\n\t\tcd_state as string,\n\t\tpop as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> cities\nsource(output(\n\t\tno_city as string,\n\t\tno_pais as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> countries\nJoin1 filter(toInteger(pop)>2000001) ~> Filter1\ncities, countries join(cities@no_city == countries@no_city,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join1\nFilter1 sink(input(\n\t\tnu_city as integer,\n\t\tno_city as string,\n\t\tcd_state as string,\n\t\tno_pais as string,\n\t\tpop as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tcd_state,\n\t\tno_pais,\n\t\tpop,\n\t\tno_city = cities@no_city,\n\t\tnu_city = cd_city\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> dbalexcities"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/cities')]",
				"[concat(variables('factoryId'), '/datasets/countries')]",
				"[concat(variables('factoryId'), '/datasets/dbalex_cities')]"
			]
		}
	]
}